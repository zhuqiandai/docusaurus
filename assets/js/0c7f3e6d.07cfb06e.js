"use strict";(self.webpackChunkoriginal=self.webpackChunkoriginal||[]).push([[3966],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=c(t),h=o,m=g["".concat(l,".").concat(h)]||g[h]||p[h]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=h;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[g]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},69785:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const a={title:"Togological Sort Kahn",description:"This is my first post on Docusaurus 2.",authors:"wangzhaoxu",tags:["algorithm","graph"],hide_table_of_contents:!1},i=void 0,s={permalink:"/docusaurus/blog/algorithm/graph/Topological-Sort-Kahn",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/algorithm/graph/Topological-Sort-Kahn.md",source:"@site/blog/algorithm/graph/Topological-Sort-Kahn.md",title:"Togological Sort Kahn",description:"This is my first post on Docusaurus 2.",date:"2023-03-03T13:35:22.000Z",formattedDate:"March 3, 2023",tags:[{label:"algorithm",permalink:"/docusaurus/blog/tags/algorithm"},{label:"graph",permalink:"/docusaurus/blog/tags/graph"}],readingTime:1.46,hasTruncateMarker:!1,authors:[{name:"\u957f\u751f\u4e0d\u8001\u836f",title:"to => GIS Fullstack Engineer",url:"https://github.com/zhuqiandai",imageURL:"https://github.com/zhuqiandai.png",key:"wangzhaoxu"}],frontMatter:{title:"Togological Sort Kahn",description:"This is my first post on Docusaurus 2.",authors:"wangzhaoxu",tags:["algorithm","graph"],hide_table_of_contents:!1},prevItem:{title:"Togological Sort DFS",permalink:"/docusaurus/blog/algorithm/graph/Topological-Sort-DFS"},nextItem:{title:"2023.03.02",permalink:"/docusaurus/blog/daily-english/20230302"}},l={authorsImageUrls:[void 0]},c=[{value:"Kahn \u7b97\u6cd5",id:"kahn-\u7b97\u6cd5",level:2}],u={toc:c},g="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(g,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"\u6982\u5ff5",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"\u6392\u5e8f\u4efb\u52a1\u4f18\u5148\u7ea7\uff0c\u4efb\u52a1\u9700\u8981\u6709\u6b21\u5e8f\uff0c\u6240\u4ee5\u9700\u8981\u6709\u5411"),(0,o.kt)("p",{parentName:"admonition"},"\u4efb\u52a1\u4e0d\u80fd\u5faa\u73af\u6267\u884c\uff0c\u6240\u4ee5\u9700\u8981\u65e0\u73af\uff08\u4e5f\u5c31\u53ef\u4ee5\u5224\u65ad\u56fe\u662f\u5426\u6709\u73af\uff09"),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"\u6709\u5411\u65e0\u73af\u56fe(DAG)"))),(0,o.kt)("h2",{id:"kahn-\u7b97\u6cd5"},"Kahn \u7b97\u6cd5"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4e0d\u65ad\u5bfb\u627e\u6bcf\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u8282\u70b9")),(0,o.kt)("mermaid",{value:"flowchart LR\n    \u5efa\u56fe --\x3e \u5efa\u5165\u5ea6 --\x3e \u627e\u5165\u53e3 --\x3e BFS"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * \u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\u751f\u6210\u7684\u662f\u6709\u5411\u65e0\u73af\u56fe\u7684\u62d3\u6251\u6392\u5e8f\n * 1. \u6709\u5411\n * 2. \u65e0\u73af\n *\n *  V\uff1a\u9876\u70b9\u6570\u91cf\n *  edges: Array<Array<T>>\n */\n\nfunction topoSortbyKahn(V, edges) {\n    const graph = {}\n    const inDegrees = {}\n\n    /**\n     *  1. \u5efa\u56fe graph\n     *  2. \u5efa\u5165\u5ea6 inDegrees\n     */\n    for (const edge of edges) {\n        const [start, end] = [edge[0], edge[1]]\n\n        const item = graph[start]\n\n        item ? item.push(end) : (graph[start] = [end])\n\n        !inDegrees[start] && (inDegrees[start] = 0)\n        !inDegrees[end] && (inDegrees[end] = 0)\n\n        inDegrees[end] += 1\n    }\n\n    console.log(graph)\n    /**\n     *  3. \u627e\u5165\u53e3\n     */\n    const queue = []\n    const inDegreeIter = Object.entries(inDegrees)\n\n    for (const [edge, degree] of inDegreeIter) {\n        degree === 0 && queue.push(edge)\n    }\n\n    /**\n     *  4. BFS\n     */\n    let count = 0\n    while (queue.length > 0) {\n        const curr = queue.shift()\n        count += 1\n\n        console.log('topo sort result', curr)\n        const neis = graph[curr] ?? []\n\n        for (const edge of neis) {\n            if (--inDegrees[edge] === 0) {\n                queue.push(edge)\n            }\n        }\n    }\n\n    console.log('is finish', count === V)\n}\n\nconst V = 6\nconst edges = [\n    ['A', 'C'],\n    ['A', 'D'],\n    ['C', 'F'],\n    ['F', 'E'],\n    ['B', 'D'],\n    ['B', 'E'],\n]\n\ntopoSortbyKahn(V, edges)\n")))}p.isMDXComponent=!0}}]);